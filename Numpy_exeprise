#### 1. Import  numpy 

import numpy as np

#### 2. Print the numpy version

print ("ex2 : numpy version : " , np.__version__)

#### 3. Create a vector of zeros with the size 10

a = np.zeros(10,dtype=np.int16)
print("ex3 : array of 10 zero " , a)

#### 4.  How to find the memory size of any array

size_of_a = a.itemsize
print("ex4 : array member memory size " , size_of_a)

#### 5.  How to get the documentation of the numpy add function from the IPython console?
print("ex5 get the documentation of the numpy add " , np.info(np.add))

#### 6.  Create a vector of zeros with the size 10 but the fifth value which is 1 

a = np.zeros(10,dtype=np.int32)
a[4] = 1
print("ex6 : array of 10 zero exept fifth " , a)

#### 7.  Create a vector with values ranging from 10 to 49 

a = np.arange(10, 50) 
print("ex7 : array of ranging from 10 to 49 " , a)


#### 8.  Reverse a vector 


a = np.arange(0, 10) 
print("ex8 : Reverse array of : " , a )
ra = a[::-1]
print("is : " , ra )

#### 9.  Create a 3x3 matrix with values ranging from 0 to 8 

a = np.arange(0, 9) . reshape((3,3))
print("ex9 : 3x3 matrix with values  of :  " , '\n' , a )

#### 10. Find indices of non-zero elements from \[1,2,0,0,4,0\]0

a = np.array([1,2,0,0,4,0])

print("ex10 : non-zero elements from : " , a )
ra = a.nonzero()
print("is : " , ra )

#### 11. Create a 3x3 identity matrix 

m = np.eye(3)
print("ex11 : Create a 3x3 identity matrix : " , '\n' , m )

#### 12. Create a 3x3x3 array with random values
a = np.random.rand(3,3 ,3)
print("ex12 : 3x3x3 array with random values : " , '\n' , a )

#### 13. Create a 10x10 array with random values and find the minimum and maximum values 

a = np.random.rand(10,10)
amin = a.min()
amax = a.max()
print("ex13 : min max elements of : " , '\n', a ) 
print("min is : " , '\n', amin )
print("max is : " , '\n', amax )

#### 14. Create a random vector of size 30 and find the mean value 

a = np.random.rand(30)
amean = a.mean()
print("ex14 : mean max elements of : " , '\n', a ) 
print("is : " , '\n', amean )


#### 15. Create a 2d array with 1 on the border and 0 inside 

a = np.ones((4,4))
a[1:-1,1:-1] = 0
print("ex15 : 2d array with 1 on the border " , '\n', a)

#### 16. Add a border (filled with 0's) around an existing array

a = np.zeros((4,4))
a = np.pad(a, (1,1), 'constant', constant_values=(1, 1))
print("ex16 : 2d array with border 1 " , '\n', a)

#### 17. What is the result of the following expression? 

print("ex17 : the result of np.nan : " , np.nan)

print("ex17 : the result of 0 * np.nan : " , 0 * np.nan)

print("ex17 : the result of np.nan == np.nan " , np.nan == np.nan)

print("ex17 : the result of np.inf > np.nan : " , np.inf > np.nan)

print("ex17 : the result of np.inf > np.nan : " , np.inf > np.nan)

print("ex17 : the result of np.nan - np.nan : " , np.nan - np.nan)

print("ex17 : the result of 0.3 == 3 * 0.1 : " , 0.3 == 3 * 0.1)

"""
np.nan == np.nan
np.inf > np.nan
np.nan - np.nan
0.3 == 3 * 0.1
"""

a = np.diag([1,2,3,4,7])
print("ex18 : matrix with values 1,2,3,4,7 " , '\n', a)


#### 19. Create a 8x8 matrix and fill it with a checkerboard pattern 

a = np.zeros((8,8),dtype=int)
a[::2,1::2] = 1
a[1::2,::2] = 1
print("ex19 : matrix and fill it with a checkerboard pattern " , '\n', a)

#### 20. Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element?


a = np.unravel_index(100, (6,7,8))
print("ex20 : index (x,y,z) of the 100th element " , a)

#### 21. Create a checkerboard 8x8 matrix using the tile function (★☆☆)


a = np.tile( np.array([[0,1],[1,0]]), (4,4))
print("ex21 :Create a checkerboard 8x8 matrix using the tile function " , '\n' , a)

#### 22. Normalize a 5x5 random matrix

a = np.random.rand(5,5)
print("ex22 :rand 5x5 matrix " , '\n' , a)

amin= a.min()  
print("ex22 :min of rand 5x5 matrix : " , amin)

a = a - amin
print("ex22 :minus min " , '\n' , a)


amax = a.max()
print("ex22 :max of rand 5x5 matrix : " , amax ) 

a = a / ( amax - amin)
print("ex22 :Normalize rand 5x5 matrix " , '\n' , a)


#### 23. Create an array of 2x4 with dtype numpy.int16, print the dtype of the array 

a = np.array([1,2,3,4,5,6,7,8],dtype=np.int16) 
a = a.reshape((2,4))

print("ex23 :array of 2x4 " , '\n' , a, '\n' , a.dtype )

#### 24. Multiply a 5x3 matrix by a 3x2 matrix  


a = np.ones((5,3),dtype=int)
b = np.ones((3,2),dtype=int)
p= np.dot(a,b)

print("ex24 :Matrix 5x3 : " , '\n' , a, )
print("ex24 :Matrix 3x2 : " , '\n' , b  )
print("ex24 :Multiply a 5x3 matrix by a 3x2 matrix " , '\n' , p)

#### 25. Given a 1D array, negate all elements which are between 3 and 8, in place. 
  
a = np.arange(11)
print("ex25 :1D array : " , '\n' , a )

a[(3 < a) & (a <= 8)] *= -1
print("ex25 :negate all elements which are between 3 and 8 : " , '\n' , a, )


#### 26. What is the output of the following script?

print("ex26 :script : " )
print(sum(range(5),-1))
from numpy import *
print(sum(range(5),-1))


#### 27. Consider an integer vector Z, which of these expressions are legal?

Z = np.arange(0, 4) 
print("ex27 :Z : " , '\n' , Z )
a = Z**Z
print("ex27 :Z**Z : " , '\n' , a )

a = Z <- Z
print("ex27 :Z <- Z : " , '\n' , a )

a =  1j*Z
print("ex27 :1j*Z : " , '\n' , a )


#### 28. What are the result of the following expressions?

"""
a =  np.array(0)
print("ex28: np.array(0): " , '\n' , a )
a =  np.array(0) / np.array(0) #  = nan
print("ex28 :np.array(0) / np.array(0) : " , a )
a = np.array(0) // np.array(0) # = 0
print("ex28 :np.array(0) // np.array(0) : "  , a )
"""

#### 29. How to round away from zero a float array ? 


a = np.random.uniform(-10,+10,10)
print("ex29: np.random.uniform : " , '\n' , a )
asign = np.copysign(1, a)
anosign = a * asign
print("ex29: anosign : " , '\n' , anosign ) 
aceil = np.ceil( anosign ) 
print("ex29: aceil : " , '\n' , aceil ) 
ares = aceil * asign
print("ex29: ares : " , '\n' , ares ) 


#### 30. How to find common values between two arrays? (★☆☆)


a = np.arange(0, 4) 
b = np.arange(2, 6) 

com = np.intersect1d(a, b)
print("ex30: a : " , '\n' , a ) 
print("ex30: b : " , '\n' , b ) 
print("ex30: common of a and b : " , '\n' , com ) 




